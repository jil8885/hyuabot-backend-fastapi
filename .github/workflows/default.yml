name: default

on: [push, pull_request]
jobs:
  lint:
    runs-on: ["self-hosted", "X64"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      env:
        REQUIREMENTS_FILE: lint
      run: |
        python -m pip install --upgrade pip setuptools wheel
        set -e
        python -m pip install -U -r requirements/${REQUIREMENTS_FILE}.txt
    - name: Lint with flake8
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" -a -n "$GITHUB_HEAD_REF" ]; then
          echo "(skipping matchers for pull request from local branches)"
        else
          echo "::add-matcher::.github/workflows/flake8-matcher.json"
        fi
        python -m flake8 src tests

  typecheck:
    runs-on: ["self-hosted", "X64"]
    needs: lint
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      env:
        REQUIREMENTS_FILE: typecheck
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -U -r requirements/${REQUIREMENTS_FILE}.txt
    - name: Type check with mypy
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" -a -n "$GITHUB_HEAD_REF" ]; then
          echo "(skipping matchers for pull request from local branches)"
        else
          echo "::add-matcher::.github/workflows/mypy-matcher.json"
        fi
        python -m mypy --no-color-output src tests

  test:
    runs-on: ["self-hosted", "X64"]
    needs: [lint, typecheck]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      env:
        REQUIREMENTS_FILE: test
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -U -r requirements/${REQUIREMENTS_FILE}.txt
    - name: Test with pytest
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
      run: |
        python -m pytest -m 'not integration' -v --cov=src
  deploy:
    runs-on: ["self-hosted", "ARM64"]
    on:
      push:
        tags:
          - "v*"
    needs: test
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build docker image
      uses: docker/build-push-action@v4
      with:
        push: false
        tags: hyuabot-api-server-python:latest
